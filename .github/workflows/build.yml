name: Build

on:
  push:
    tags:        
      - 'v*'
    paths-ignore:
      - "**.md"
      - "**.spec.js"
      - ".idea"
      - ".vscode"
      - ".dockerignore"
      - "Dockerfile"
      - ".gitignore"
      - ".github/**"
      - "!.github/workflows/build.yml"

jobs:
  create-release:  #1) Create the release
    runs-on: ubuntu-latest
    steps:
      - name: Create a Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true

  build: # 2) Build the release, for each OS, and upload the executables
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Build Release Files
        run: npm run build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup release artefacts (windows)
        if: matrix.os == 'windows-latest'
        shell: cmd
        run: npx rimraf release\\${{ github.ref_name }}\\!(*.exe)

      - name: Cleanup release artefacts (linux)
        if: matrix.os == 'ubuntu-latest'
        run: npx rimraf 'release/${{ github.ref_name }}/!(*.deb|*.AppImage)'

      - name: Cleanup release artefacts (macos)
        if: matrix.os == 'macos-latest'
        run: npx rimraf 'release/${{ github.ref_name }}/!(*.dmg)'

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: release/${{ github.ref_name }}/terative_*
          tag: ${{ github.ref }} # automatically converts the tag name from the ref
          overwrite: true
          file_glob: true